# general settings
name: train_DRCT_SRx4_from_scratch
model_type: DRCTModel
scale: 4
num_gpu: 1
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_train_HR
    dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic/X4
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256  # Keep the gt_size for proper scale matching
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4  # Reduce number of workers for faster loading
    batch_size_per_gpu: 4  # Keep batch size small to speed up the process
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: datasets/Set14/GTmod12
    dataroot_lq: datasets/Set14/LRbicx4
    io_backend:
      type: disk


# network structures
network_g:
  type: DRCT
  upscale: 4
  in_chans: 3
  img_size: 64
  window_size: 16
  compress_ratio: 3
  squeeze_factor: 30
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-3  # Increased learning rate for faster training
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [500, 1000]  # Use fewer steps to reduce training time
    gamma: 0.5

  total_iter: 1000  # Reduced total iterations to speed up the training (1,000 iterations)
  warmup_iter: -1  # No warm-up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e3  # Validation after every 1000 iterations (you can adjust this)
  save_img: false
  pbar: False

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 3
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 3
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher

# logging settings
logger:
  print_freq: 100  # Print every 100 iterations
  save_checkpoint_freq: !!float 1e3  # Save checkpoint every 1000 iterations
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

